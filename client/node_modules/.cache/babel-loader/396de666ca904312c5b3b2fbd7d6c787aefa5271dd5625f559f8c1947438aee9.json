{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BHARGAVI\\\\OneDrive\\\\Desktop\\\\project\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Signup function\n  const signup = async userData => {\n    try {\n      setLoading(true);\n      // Here you would typically make an API call to your backend\n      // For now, let's simulate an API call\n      console.log('Registering user with data:', userData);\n\n      // Simulate API delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Store user data (temporary solution - replace with actual API integration)\n      localStorage.setItem('user', JSON.stringify(userData));\n      setCurrentUser(userData);\n      return {\n        success: true\n      };\n    } catch (error) {\n      throw new Error(error.message || 'Failed to create account');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Login function\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      // Hardcoded credentials for testing\n      if (email === '123456@gmail.com' && password === '123456') {\n        const testUser = {\n          email: '123456@gmail.com',\n          name: 'Test User'\n        };\n        setCurrentUser(testUser);\n        localStorage.setItem('user', JSON.stringify(testUser));\n        return {\n          success: true\n        };\n      }\n      throw new Error('Invalid credentials');\n    } catch (error) {\n      throw new Error(error.message || 'Failed to login');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('user');\n    setCurrentUser(null);\n  };\n  const value = {\n    currentUser,\n    signup,\n    login,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"ta0ozVSi/laveBdN8v1z4lKHbzA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","signup","userData","console","log","Promise","resolve","setTimeout","localStorage","setItem","JSON","stringify","success","error","Error","message","login","email","password","testUser","name","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/BHARGAVI/OneDrive/Desktop/project/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Signup function\r\n  const signup = async (userData) => {\r\n    try {\r\n      setLoading(true);\r\n      // Here you would typically make an API call to your backend\r\n      // For now, let's simulate an API call\r\n      console.log('Registering user with data:', userData);\r\n      \r\n      // Simulate API delay\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      // Store user data (temporary solution - replace with actual API integration)\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      setCurrentUser(userData);\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      throw new Error(error.message || 'Failed to create account');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Login function\r\n  const login = async (email, password) => {\r\n    try {\r\n      setLoading(true);\r\n      // Hardcoded credentials for testing\r\n      if (email === '123456@gmail.com' && password === '123456') {\r\n        const testUser = {\r\n          email: '123456@gmail.com',\r\n          name: 'Test User'\r\n        };\r\n        setCurrentUser(testUser);\r\n        localStorage.setItem('user', JSON.stringify(testUser));\r\n        return { success: true };\r\n      }\r\n      throw new Error('Invalid credentials');\r\n    } catch (error) {\r\n      throw new Error(error.message || 'Failed to login');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    localStorage.removeItem('user');\r\n    setCurrentUser(null);\r\n  };\r\n\r\n  const value = {\r\n    currentUser,\r\n    signup,\r\n    login,\r\n    logout,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n} "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,SAASM,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACxB,OAAON,UAAU,CAACI,WAAW,CAAC;AAChC;AAACE,EAAA,CAFeD,OAAO;AAIvB,OAAO,SAASE,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EACzC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA,MAAMa,MAAM,GAAG,MAAOC,QAAQ,IAAK;IACjC,IAAI;MACFF,UAAU,CAAC,IAAI,CAAC;MAChB;MACA;MACAG,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,QAAQ,CAAC;;MAEpD;MACA,MAAM,IAAIG,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;;MAEvD;MACAE,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACT,QAAQ,CAAC,CAAC;MACtDJ,cAAc,CAACI,QAAQ,CAAC;MAExB,OAAO;QAAEU,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAACD,KAAK,CAACE,OAAO,IAAI,0BAA0B,CAAC;IAC9D,CAAC,SAAS;MACRf,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMgB,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,IAAI;MACFlB,UAAU,CAAC,IAAI,CAAC;MAChB;MACA,IAAIiB,KAAK,KAAK,kBAAkB,IAAIC,QAAQ,KAAK,QAAQ,EAAE;QACzD,MAAMC,QAAQ,GAAG;UACfF,KAAK,EAAE,kBAAkB;UACzBG,IAAI,EAAE;QACR,CAAC;QACDtB,cAAc,CAACqB,QAAQ,CAAC;QACxBX,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACQ,QAAQ,CAAC,CAAC;QACtD,OAAO;UAAEP,OAAO,EAAE;QAAK,CAAC;MAC1B;MACA,MAAM,IAAIE,KAAK,CAAC,qBAAqB,CAAC;IACxC,CAAC,CAAC,OAAOD,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAACD,KAAK,CAACE,OAAO,IAAI,iBAAiB,CAAC;IACrD,CAAC,SAAS;MACRf,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMqB,MAAM,GAAGA,CAAA,KAAM;IACnBb,YAAY,CAACc,UAAU,CAAC,MAAM,CAAC;IAC/BxB,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMyB,KAAK,GAAG;IACZ1B,WAAW;IACXI,MAAM;IACNe,KAAK;IACLK,MAAM;IACNtB;EACF,CAAC;EAED,oBACET,OAAA,CAACC,WAAW,CAACiC,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAA5B,QAAA,EAChCA;EAAQ;IAAA8B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAAChC,GAAA,CApEeF,YAAY;AAAAmC,EAAA,GAAZnC,YAAY;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}